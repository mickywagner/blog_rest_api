{"version":3,"sources":["../../src/models/User.js"],"names":["Schema","mongoose","UserSchema","email","type","String","required","username","password","pre","next","user","bcrypt","hash","methods","isValidPassword","compare","User","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,SAASC,mBAASD,MAAxB;;AAEA,IAAME,aAAa,IAAIF,MAAJ,CACf;AACIG,WAAO,EAACC,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EADX;AAEIC,cAAU,EAACH,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAFd;AAGIE,cAAU,EAACJ,MAAMC,MAAP,EAAeC,UAAU,IAAzB;AAHd,CADe,CAAnB;;AAQAJ,WAAWO,GAAX,CAAe,MAAf;AAAA,uEAAuB,iBAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,4BADa,GACN,IADM;AAAA;AAAA,+BAEAC,mBAAOC,IAAP,CAAY,KAAKL,QAAjB,EAA2B,EAA3B,CAFA;;AAAA;AAEbK,4BAFa;;AAGnB,6BAAKL,QAAL,GAAgBK,IAAhB;AACAH;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAAA;AAAA;AAAA;AAAA;;AAOAR,WAAWY,OAAX,CAAmBC,eAAnB;AAAA,wEAAqC,kBAAeP,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BG,4BAD2B,GACpB,IADoB;AAAA;AAAA,+BAEXC,mBAAOI,OAAP,CAAeR,QAAf,EAAyBG,KAAKH,QAA9B,CAFW;;AAAA;AAE3BQ,+BAF2B;AAAA,0DAG1BA,OAH0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArC;;AAAA;AAAA;AAAA;AAAA;;AAMA,IAAMC,OAAOhB,mBAASiB,KAAT,CAAe,MAAf,EAAuBhB,UAAvB,CAAb;;kBAEee,I","file":"User.js","sourcesContent":["import mongoose from 'mongoose'\nimport bcrypt from 'bcryptjs'\n\nconst Schema = mongoose.Schema\n\nconst UserSchema = new Schema(\n    {\n        email: {type: String, required: true},\n        username: {type: String, required: true},\n        password: {type: String, required: true}       \n    }\n)\n\nUserSchema.pre('save', async function(next) {\n    const user = this\n    const hash = await bcrypt.hash(this.password, 10)\n    this.password = hash\n    next()\n})\n\nUserSchema.methods.isValidPassword = async function(password) {\n    const user = this\n    const compare = await bcrypt.compare(password, user.password)\n    return compare\n}\n\nconst User = mongoose.model('User', UserSchema)\n\nexport default User"]}
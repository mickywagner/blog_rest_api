{"version":3,"sources":["../../src/routes/api.js"],"names":["router","express","Router","verifyToken","passport","authenticate","session","get","blogPostController","posts_list","posts_details","post","posts_create_post","put","posts_edit_put","posts_put_like","posts_put_dislike","delete","posts_delete_delete","commentController","all_comments","comments_list","comments_create_post","comment_details","comments_edit_put","comments_delete_delete","userController","user_list","user_details","user_create_post","user_edit_put","user_delete_delete"],"mappings":";;;;;;AAAA;;;;AAGA;;;;AACA;;AAIA;;;;AACA;;;;AACA;;;;;;AATA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAKA,IAAMC,cAAcC,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAACC,SAAS,KAAV,EAA7B,CAApB;;AAMA;;AAEAN,OAAOO,GAAP,CAAW,QAAX,EAAqBC,6BAAmBC,UAAxC;;AAEAT,OAAOO,GAAP,CAAW,gBAAX,EAA6BC,6BAAmBE,aAAhD;;AAEA;;AAEAV,OAAOW,IAAP,CAAY,QAAZ,EAAsBR,WAAtB,EAAmCK,6BAAmBI,iBAAtD;;AAEAZ,OAAOa,GAAP,CAAW,gBAAX,EAA8BV,WAA9B,EAA2CK,6BAAmBM,cAA9D;;AAEAd,OAAOa,GAAP,CAAW,sBAAX,EAAmCL,6BAAmBO,cAAtD;AACAf,OAAOa,GAAP,CAAW,yBAAX,EAAsCL,6BAAmBQ,iBAAzD;;AAEAhB,OAAOiB,MAAP,CAAc,gBAAd,EAAgCd,WAAhC,EAA6CK,6BAAmBU,mBAAhE;;AAGA;;AAEAlB,OAAOO,GAAP,CAAW,WAAX,EAAwBY,4BAAkBC,YAA1C;;AAEApB,OAAOO,GAAP,CAAW,yBAAX,EAAsCY,4BAAkBE,aAAxD;;AAEArB,OAAOW,IAAP,CAAY,yBAAZ,EAAuCQ,4BAAkBG,oBAAzD;;AAEAtB,OAAOO,GAAP,CAAW,oCAAX,EAAiDY,4BAAkBI,eAAnE;;AAEA;AACAvB,OAAOa,GAAP,CAAW,oCAAX,EAAiDV,WAAjD,EAA8DgB,4BAAkBK,iBAAhF;;AAEAxB,OAAOiB,MAAP,CAAc,oCAAd,EAAoDd,WAApD,EAAiEgB,4BAAkBM,sBAAnF;;AAGA;;AAEAzB,OAAOO,GAAP,CAAW,QAAX,EAAqBmB,yBAAeC,SAApC;;AAEA3B,OAAOO,GAAP,CAAW,gBAAX,EAA6BJ,WAA7B,EAA0CuB,yBAAeE,YAAzD;;AAEA5B,OAAOW,IAAP,CAAY,QAAZ,EAAsBR,WAAtB,EAAmCuB,yBAAeG,gBAAlD;;AAEA7B,OAAOa,GAAP,CAAW,gBAAX,EAA6BV,WAA7B,EAA0CuB,yBAAeI,aAAzD;;AAEA9B,OAAOiB,MAAP,CAAc,gBAAd,EAAgCd,WAAhC,EAA6CuB,yBAAeK,kBAA5D;;kBAIe/B,M","file":"api.js","sourcesContent":["import express from 'express'\nconst router = express.Router()\n\nimport passport from 'passport'\nimport '../passport'\n\nconst verifyToken = passport.authenticate('jwt', {session: false})\n\nimport blogPostController from '../controllers/blogPostController'\nimport commentController from '../controllers/commentController'\nimport userController from '../controllers/userController'\n\n// BLOT POST ROUTES\n\nrouter.get('/posts', blogPostController.posts_list)\n\nrouter.get('/posts/:postId', blogPostController.posts_details)\n\n// BLOG POST - PROTECTED ROUTES -- work\n\nrouter.post('/posts', verifyToken, blogPostController.posts_create_post)\n\nrouter.put('/posts/:postId',  verifyToken, blogPostController.posts_edit_put)\n\nrouter.put('/posts/:postId/likes', blogPostController.posts_put_like)\nrouter.put('/posts/:postId/dislikes', blogPostController.posts_put_dislike)\n\nrouter.delete('/posts/:postId', verifyToken, blogPostController.posts_delete_delete)\n\n\n// COMMENT ROUTES\n\nrouter.get('/comments', commentController.all_comments)\n\nrouter.get('/posts/:postId/comments', commentController.comments_list)\n\nrouter.post('/posts/:postId/comments', commentController.comments_create_post)\n\nrouter.get('/posts/:postId/comments/:commentId', commentController.comment_details)\n\n// COMMENT PROTECTED ROUTES -- work\nrouter.put('/posts/:postId/comments/:commentId', verifyToken, commentController.comments_edit_put)\n\nrouter.delete('/posts/:postId/comments/:commentId', verifyToken, commentController.comments_delete_delete)\n\n\n// USER ROUTES -- work\n\nrouter.get('/users', userController.user_list)\n\nrouter.get('/users/:userId', verifyToken, userController.user_details)\n\nrouter.post('/users', verifyToken, userController.user_create_post)\n\nrouter.put('/users/:userId', verifyToken, userController.user_edit_put)\n\nrouter.delete('/users/:userId', verifyToken, userController.user_delete_delete)\n\n\n\nexport default router"]}